Debugging:
    Validation:
        Bindless handles
        Implementation defined/undefined behaviour
        Functions not allowed in current OpenGL profile/version
        Using extensions without explicitly enabling them
        Texture formats not natively supported on some GPUs
        Uninitialized uniforms
        Uninitialized textures
        Uninitialized buffers
    Asynchronous replaying
    Object viewing
        samplers
        program pipelines
        program uniforms
        large buffers
        program's linked shaders (not attached shaders)
    Shader debugger
        Can use SSBOs
        Possible without by rendering the values to the framebuffer
            Use this because it works on more hardware and driver combinations
            http://facweb.cti.depaul.edu/research/techreports/TR06-015.pdf
    Backtraces with line numbers for function calls
        Would significantly increase size of traces
        Should disable by default
        May not implement in favor of debug markers
    Debug markers and stuff
    State inspection
        Currently have lots though more still needed.
    Replay should check to see if the user supplied limits have been reached.

Tests:
    Compare expected objects with actual objects

Bugs:
    Handle stuff like this: https://github.com/apitrace/apitrace/issues/5#issuecomment-1025742
    The state, textures, etc will not be updated when opening a trace in the GUI.
    Group indices are stored in traces
    have only one uniform storage for an array
        so if you have 'float v[2]'
        have location translations for v[0] and v[1] but store only v
    ensure that packed and shared layout for UBOs work
    GL_PIXEL_UNPACK_BUFFER does not work with glTexImage* and glTexSubImage*
        both in replay and tracing
    vertex attribute indices are not being remapped with glVertexAttrib*n*?

transform feedback support:
    be aware of errors mentioned on page 428 of opengl 4.5 core spec of October 24 2016

Much more validation during replay

Various TODOs in the source code.

Vertex attribute indices need to work with matrices.

Dramatically reduce memory usage and size of trace files.

Cube map, 1D array, 2D array, rectangle, buffer, multisample, proxy, 1D and 3D textures.

Enabling or disabling state depending on OpenGL version and extensions.

glDelete* should handle when objects are in use.

Control over the output trace filename in the GUI.

Control over the limits file in the GUI.

Multiple thread support

Reduce memory usage during replaying.
    Reduce amount of memory needed to store state

add detailed function call on bottom

cleanup objects after replay
    don't forget trc_gl_context_rev_t::draw_vao
